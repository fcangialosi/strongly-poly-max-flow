Automatically generated by Mendeley Desktop 1.17.12
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Preferences -> BibTeX in Mendeley Desktop

@article{Goldberg:1991:CAG:105014.105022,
 author = {Goldberg, Andrew V. and Plotkin, Serge A. and Tardos, \'{E}va},
 title = {Combinatorial Algorithms for the Generalized Circulation Problem},
 journal = {Math. Oper. Res.},
 issue_date = {May 1991},
 volume = {16},
 number = {2},
 month = apr,
 year = {1991},
 issn = {0364-765X},
 pages = {351--381},
 numpages = {31},
 url = {http://dx.doi.org/10.1287/moor.16.2.351},
 doi = {10.1287/moor.16.2.351},
 acmid = {105022},
 publisher = {INFORMS},
 address = {Institute for Operations Research and the Management Sciences (INFORMS), Linthicum, Maryland, USA},
} 

@article{article,
author = {{A. V{\'{e}}gh}, L{\'{a}}szl{\'{o}}},
journal = {Mathematics of Operations Research},
title = {{A Strongly Polynomial Algorithm for Generalized Flow Maximization}},
volume = {42},
year = {2016}
}

@article{Radzik2004,
abstract = {We consider the maximum generalised network flow problem and a supply-scaling algorithmic framework for this problem. We present three network-modification operations, which may significantly decrease the size of the network when the remaining node supplies become small. We use these three operations in Goldfarb et al.'s supply-scaling algorithm and prove an O(m 2nlogB) bound on the running time of the resulting algorithm. The previous best time bounds on computing maximum generalised flows are the {\~{O}}(m1.5n2logB) bound of Kapoor and Vaidya's algorithm based on the interior-point method, and the O(m3logB) bound of Goldfarb et al.'s algorithm. {\textcopyright} 2003 Elsevier B.V. All rights reserved.},
author = {Radzik, Tomasz},
doi = {10.1016/S0304-3975(03)00403-1},
file = {:Users/katielewis/Desktop/1-s2.0-S0304397503004031-main.pdf:pdf},
isbn = {3540438645},
issn = {03043975},
journal = {Theoretical Computer Science},
keywords = {Flows with gains and losses,Generalised flows,Network flows},
number = {1},
pages = {75--97},
title = {{Improving time bounds on maximum generalised flow computations by contracting the network}},
volume = {312},
year = {2004}
}
@article{Olver2017,
author = {Olver, Neil and V{\'{e}}gh, L{\'{a}}szl{\'{o}} A.},
doi = {10.1145/3055399.3055439},
file = {:Users/katielewis/Desktop/stoc17-main181.pdf:pdf},
isbn = {9781450345286},
journal = {Proceedings of the 49th Annual ACM SIGACT Symposium on Theory of Computing  - STOC 2017},
keywords = {2017,a,a simpler and faster,acm reference format,generalized ow,neil olver and l{\'{a}}szl{\'{o}},network ow,strongly polyno-,strongly polynomial,v{\'{e}}gh},
pages = {100--111},
title = {{A simpler and faster strongly polynomial algorithm for generalized flow maximization}},
url = {http://dl.acm.org/citation.cfm?doid=3055399.3055439},
year = {2017}
}
@article{Tardos1998,
author = {Tardos, {\'{E}}va and Wayne, Kevin D.},
doi = {10.1007/3-540-69346-7_24},
file = {:Users/katielewis/Desktop/TardosSurveyGenFlow.pdf:pdf},
isbn = {354064590X},
issn = {16113349},
journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
pages = {310--324},
title = {{Simple generalized maximum flow algorithms}},
volume = {1412},
year = {1998}
}
@article{Vegh2013,
abstract = {A strongly polynomial algorithm is given for the generalized flow maximization problem. It uses a new variant of the scaling technique, called continuous scaling. The main measure of progress is that within a strongly polynomial number of steps, an arc can be identified that must be tight in every dual optimal solution, and thus can be contracted. As a consequence of the result, we also obtain a strongly polynomial algorithm for the linear feasibility problem with at most two nonzero entries per column in the constraint matrix.},
archivePrefix = {arXiv},
arxivId = {1307.6809},
author = {V{\'{e}}gh, L{\'{a}}szl{\'{o}} A.},
doi = {10.1145/2591796.2591806},
eprint = {1307.6809},
file = {:Users/katielewis/Desktop/stronglypolyVegh.pdf:pdf},
isbn = {9781450327107},
issn = {07378017},
pages = {1--44},
title = {{A strongly polynomial algorithm for generalized flow maximization}},
url = {http://arxiv.org/abs/1307.6809},
year = {2013}
}
@article{Truemper1977,
author = {Truemper, K.},
file = {:Users/katielewis/Desktop/Truemper.pdf:pdf},
journal = {SIAM Journal on Applied Mathematics},
number = {2},
pages = {450--456},
title = {{On max flows with gains and pure min-cost flows}},
url = {http://epubs.siam.org/doi/abs/10.1137/0132037},
volume = {32},
year = {1977}
}
@article{Goldberg1989,
abstract = {A generalization of the maximum-flow problem is considered in which the amounts of flow entering and leaving an arc are linearly related. More precisely, if x(e) units of flow enter an arc e, x(e)$\lambda$(e) units arrive at the other end. For instance, nodes of the graph can correspond to different currencies, with the multipliers being the exchange rates. Conservation of flow is required at every node except a given source node. The goal is to maximize the amount of flow excess at the source. This problem is a special case of linear programming, and therefore can be solved in polynomial time. The authors present polynomial-time combinatorial algorithms for this problem. The algorithms are simple and intuitive.},
author = {Goldberg, Andrew V and Plotkin, Serge a},
doi = {10.1287/moor.16.2.351},
file = {:Users/katielewis/Desktop/FatPath.pdf:pdf},
isbn = {0-8186-0877-3},
issn = {0364-765X},
journal = {Operations Research},
keywords = {combinatorial optimization,graph algorithms,network flow,on foundations of computer,paper was presented at,preliminary version of this,symp,the 29th annual ieee},
pages = {1--35},
title = {{Combinatorial Algorithms for the Generalized Circulation Problem}},
year = {1989}
}
@article{Orlin1988,
abstract = {Predicting the binding mode of flexible polypeptides to proteins is an important task that falls outside the domain of applicability of most small molecule and protein−protein docking tools. Here, we test the small molecule flexible ligand docking program Glide on a set of 19 non-$\alpha$-helical peptides and systematically improve pose prediction accuracy by enhancing Glide sampling for flexible polypeptides. In addition, scoring of the poses was improved by post-processing with physics-based implicit solvent MM- GBSA calculations. Using the best RMSD among the top 10 scoring poses as a metric, the success rate (RMSD ≤ 2.0 {\AA} for the interface backbone atoms) increased from 21{\%} with default Glide SP settings to 58{\%} with the enhanced peptide sampling and scoring protocol in the case of redocking to the native protein structure. This approaches the accuracy of the recently developed Rosetta FlexPepDock method (63{\%} success for these 19 peptides) while being over 100 times faster. Cross-docking was performed for a subset of cases where an unbound receptor structure was available, and in that case, 40{\%} of peptides were docked successfully. We analyze the results and find that the optimized polypeptide protocol is most accurate for extended peptides of limited size and number of formal charges, defining a domain of applicability for this approach.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Orlin, James B.},
doi = {10.1017/CBO9781107415324.004},
eprint = {arXiv:1011.1669v3},
file = {:Users/katielewis/Desktop/Orlin Min Cost Flo.pdf:pdf},
isbn = {9788578110796},
issn = {1098-6596},
journal = {Acm Stoc},
keywords = {icle},
number = {2},
pages = {377--387},
pmid = {25246403},
title = {{A Faster Strongly Polynomial Minimum Cost Flow Algorithm}},
volume = {41},
year = {1988}
}
